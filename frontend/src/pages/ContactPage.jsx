import React, { useState } from 'react';
import Header from '../components/layout/header/Header';
import Footer from '../components/layout/footer/Footer';
import AnimatedSection from '../components/common/AnimatedSection';
import '../assets/css/ModernAnimations.css';
import '../assets/css/ContactPage.css';

const ContactPage = () => {
    const [formData, setFormData] = useState({
        name: '',
        email: '',
        phone: '',
        subject: '',
        message: ''
    });
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [submitSuccess, setSubmitSuccess] = useState(false);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSubmitting(true);
        
        // Simulate form submission
        setTimeout(() => {
            console.log('Contact form submitted:', formData);
            
            // Reset the form
            setFormData({
                name: '',
                email: '',
                phone: '',
                subject: '',
                message: ''
            });
            setIsSubmitting(false);
            setSubmitSuccess(true);
            
            // Hide success message after 5 seconds
            setTimeout(() => {
                setSubmitSuccess(false);
            }, 5000);
        }, 1500);
    };

    const contactInfo = [
        {
            icon: "üìç",
            title: "ƒê·ªãa ch·ªâ",
            content: "Khu ƒê√¥ Th·ªã M·ªõi An Ph√∫ Th·ªãnh, Nh∆°n B√¨nh, Quy Nh∆°n",
            color: "#059669"
        },
        {
            icon: "üìû",
            title: "ƒêi·ªán tho·∫°i",
            content: "+84 123 456 789",
            color: "#0891b2"
        },
        {
            icon: "‚úâÔ∏è",
            title: "Email",
            content: "contact@greenweave.com",
            color: "#7c3aed"
        },
        {
            icon: "‚è∞",
            title: "Gi·ªù l√†m vi·ªác",
            content: "Th·ª© 2 - Th·ª© 6: 8:00 - 17:00",
            color: "#dc2626"
        }
    ];

    const contactFeatures = [
        {
            icon: "‚ö°",
            title: "Ph·∫£n h·ªìi nhanh ch√≥ng",
            description: "Cam k·∫øt ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù"
        },
        {
            icon: "üîí",
            title: "B·∫£o m·∫≠t th√¥ng tin", 
            description: "Th√¥ng tin ƒë∆∞·ª£c m√£ h√≥a v√† b·∫£o v·ªá tuy·ªát ƒë·ªëi"
        },
        {
            icon: "üí¨",
            title: "T∆∞ v·∫•n chuy√™n nghi·ªáp",
            description: "ƒê·ªôi ng≈© chuy√™n gia gi√†u kinh nghi·ªám"
        },
        {
            icon: "üå±",
            title: "H·ªó tr·ª£ b·ªÅn v·ªØng",
            description: "T∆∞ v·∫•n gi·∫£i ph√°p th√¢n thi·ªán m√¥i tr∆∞·ªùng"
        }
    ];

    return (
        <div className="premium-contact-page">
            <Header />
            
            {/* ULTRA PREMIUM Hero Section */}
            <section className="premium-contact-hero">
                {/* Floating Orbs Background */}
                <div className="hero-floating-orbs">
                    <div className="floating-orb orb-1"></div>
                    <div className="floating-orb orb-2"></div>
                    <div className="floating-orb orb-3"></div>
                    <div className="floating-orb orb-4"></div>
                </div>
                
                {/* Gradient Overlay */}
                <div className="hero-gradient-overlay"></div>
                
                <div className="container">
                    <AnimatedSection animation="floatIn" delay={0.2} className="hero-content">
                        <div className="hero-badge">
                            <AnimatedSection animation="pulse" hoverEffect="glow">
                                <span className="badge-icon">üí¨</span>
                                <span className="badge-text">Li√™n h·ªá ngay</span>
                            </AnimatedSection>
                        </div>
                        
                        <h1 className="hero-title">
                            <span className="title-line-1">K·∫øt n·ªëi v·ªõi</span>
                            <span className="title-line-2 gradient-text-premium">GreenWeave</span>
                        </h1>
                        
                        <p className="hero-description">
                            Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng <strong>l·∫Øng nghe</strong> v√† 
                            <span className="highlight-text"> h·ªó tr·ª£ b·∫°n</span>. 
                            H√£y chia s·∫ª √Ω ki·∫øn, g√≥p √Ω ho·∫∑c th·∫Øc m·∫Øc ƒë·ªÉ c√πng nhau 
                            x√¢y d·ª±ng t∆∞∆°ng lai xanh b·ªÅn v·ªØng.
                        </p>
                        
                        <div className="hero-stats">
                            <AnimatedSection animation="scaleInFade" delay={0.4} className="stat-item">
                                <div className="stat-number">24h</div>
                                <div className="stat-label">Ph·∫£n h·ªìi nhanh</div>
                            </AnimatedSection>
                            <AnimatedSection animation="scaleInFade" delay={0.5} className="stat-item">
                                <div className="stat-number">100%</div>
                                <div className="stat-label">B·∫£o m·∫≠t</div>
                            </AnimatedSection>
                            <AnimatedSection animation="scaleInFade" delay={0.6} className="stat-item">
                                <div className="stat-number">500+</div>
                                <div className="stat-label">Kh√°ch h√†i l√≤ng</div>
                            </AnimatedSection>
                        </div>
                    </AnimatedSection>
                </div>
            </section>

            {/* PREMIUM Contact Info Section */}
            <section className="premium-contact-info">
                <div className="container">
                    <AnimatedSection animation="slideUp" delay={0.2} className="section-header">
                        <h2 className="section-title">Th√¥ng tin li√™n h·ªá</h2>
                        <p className="section-subtitle">
                            Nhi·ªÅu c√°ch ƒë·ªÉ b·∫°n c√≥ th·ªÉ k·∫øt n·ªëi v·ªõi ch√∫ng t√¥i
                        </p>
                    </AnimatedSection>
                    
                    <div className="contact-info-premium-grid">
                        {contactInfo.map((info, index) => (
                            <AnimatedSection 
                                key={index}
                                animation="zoomIn" 
                                delay={0.3 + index * 0.1}
                                hoverEffect="lift"
                                className="contact-info-premium-card glassmorphism"
                            >
                                <div className="card-glow" style={{ background: `linear-gradient(135deg, ${info.color}20, transparent)` }}></div>
                                <div className="contact-icon" style={{ color: info.color }}>
                                    {info.icon}
                                </div>
                                <h3 className="contact-title">{info.title}</h3>
                                <p className="contact-content">{info.content}</p>
                                <div className="card-border" style={{ background: `linear-gradient(135deg, ${info.color}, ${info.color}80)` }}></div>
                            </AnimatedSection>
                        ))}
                    </div>
                </div>
            </section>

            {/* ULTRA PREMIUM Contact Form Section */}
            <section className="premium-contact-form-section">
                <div className="container">
                    <div className="form-section-container">
                        <AnimatedSection animation="slideRight" delay={0.3} className="form-features-side">
                            <h2 className="form-section-title">G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h2>
                            <p className="form-section-description">
                                ƒêi·ªÅn th√¥ng tin v√†o form b√™n c·∫°nh v√† ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i 
                                v·ªõi b·∫°n trong th·ªùi gian s·ªõm nh·∫•t c√≥ th·ªÉ.
                            </p>
                            
                            <div className="contact-features-premium">
                                {contactFeatures.map((feature, index) => (
                                    <AnimatedSection 
                                        key={index}
                                        animation="slideUp" 
                                        delay={0.5 + index * 0.1}
                                        hoverEffect="glow"
                                        className="feature-premium-item glassmorphism"
                                    >
                                        <div className="feature-icon">{feature.icon}</div>
                                        <div className="feature-content">
                                            <h4 className="feature-title">{feature.title}</h4>
                                            <p className="feature-description">{feature.description}</p>
                                        </div>
                                    </AnimatedSection>
                                ))}
                            </div>
                        </AnimatedSection>

                        <AnimatedSection animation="slideLeft" delay={0.5} className="form-container-premium">
                            <div className="form-wrapper-glassmorphism">
                                <form className="premium-contact-form" onSubmit={handleSubmit}>
                                    <div className="form-header">
                                        <h3 className="form-title">Th√¥ng tin li√™n h·ªá</h3>
                                        <p className="form-subtitle">Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin</p>
                                    </div>

                                    <div className="form-row">
                                        <div className="form-group">
                                            <label htmlFor="name">H·ªç v√† t√™n *</label>
                                            <input
                                                type="text"
                                                id="name"
                                                name="name"
                                                value={formData.name}
                                                onChange={handleInputChange}
                                                required
                                                disabled={isSubmitting}
                                                className="form-input-premium"
                                                placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                                            />
                                        </div>
                                        <div className="form-group">
                                            <label htmlFor="email">Email *</label>
                                            <input
                                                type="email"
                                                id="email"
                                                name="email"
                                                value={formData.email}
                                                onChange={handleInputChange}
                                                required
                                                disabled={isSubmitting}
                                                className="form-input-premium"
                                                placeholder="your@email.com"
                                            />
                                        </div>
                                    </div>

                                    <div className="form-row">
                                        <div className="form-group">
                                            <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</label>
                                            <input
                                                type="tel"
                                                id="phone"
                                                name="phone"
                                                value={formData.phone}
                                                onChange={handleInputChange}
                                                disabled={isSubmitting}
                                                className="form-input-premium"
                                                placeholder="+84 123 456 789"
                                            />
                                        </div>
                                        <div className="form-group">
                                            <label htmlFor="subject">Ch·ªß ƒë·ªÅ *</label>
                                            <select
                                                id="subject"
                                                name="subject"
                                                value={formData.subject}
                                                onChange={handleInputChange}
                                                required
                                                disabled={isSubmitting}
                                                className="form-input-premium form-select-premium"
                                            >
                                                <option value="">Ch·ªçn ch·ªß ƒë·ªÅ</option>
                                                <option value="product">S·∫£n ph·∫©m</option>
                                                <option value="order">ƒê∆°n h√†ng</option>
                                                <option value="support">H·ªó tr·ª£ k·ªπ thu·∫≠t</option>
                                                <option value="partnership">H·ª£p t√°c</option>
                                                <option value="feedback">G√≥p √Ω</option>
                                                <option value="other">Kh√°c</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div className="form-group">
                                        <label htmlFor="message">Tin nh·∫Øn *</label>
                                        <textarea
                                            id="message"
                                            name="message"
                                            value={formData.message}
                                            onChange={handleInputChange}
                                            required
                                            disabled={isSubmitting}
                                            className="form-input-premium form-textarea-premium"
                                            rows="6"
                                            placeholder="Chia s·∫ª chi ti·∫øt v·ªÅ y√™u c·∫ßu c·ªßa b·∫°n..."
                                        ></textarea>
                                    </div>

                                    <button 
                                        type="submit" 
                                        className={`form-submit-premium ${isSubmitting ? 'loading' : ''} ${submitSuccess ? 'success' : ''}`}
                                        disabled={isSubmitting}
                                    >
                                        <span className="btn-content">
                                            {isSubmitting ? (
                                                <>
                                                    <div className="modern-spinner"></div>
                                                    <span>ƒêang g·ª≠i...</span>
                                                </>
                                            ) : submitSuccess ? (
                                                <>
                                                    <span className="btn-icon">‚úì</span>
                                                    <span>ƒê√£ g·ª≠i th√†nh c√¥ng!</span>
                                                </>
                                            ) : (
                                                <>
                                                    <span className="btn-icon">üì§</span>
                                                    <span>G·ª≠i tin nh·∫Øn</span>
                                                </>
                                            )}
                                        </span>
                                        <div className="btn-glow"></div>
                                    </button>

                                    {/* SUCCESS MESSAGE PREMIUM */}
                                    {submitSuccess && (
                                        <AnimatedSection animation="scaleInFade" className="success-message-premium glassmorphism">
                                            <div className="success-icon-premium">‚úì</div>
                                            <div className="success-content-premium">
                                                <h4>C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá!</h4>
                                                <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn v√† s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù.</p>
                                            </div>
                                        </AnimatedSection>
                                    )}
                                </form>
                            </div>
                        </AnimatedSection>
                    </div>
                </div>
            </section>

            {/* PREMIUM Map Section */}
            <section className="premium-map-section">
                <div className="container">
                    <AnimatedSection animation="fadeIn" delay={0.2} className="map-section-content">
                        <h2 className="map-section-title">Gh√© thƒÉm showroom c·ªßa ch√∫ng t√¥i</h2>
                        <p className="map-section-description">
                            Tr·∫£i nghi·ªám tr·ª±c ti·∫øp c√°c s·∫£n ph·∫©m b·ªÅn v·ªØng t·∫°i kh√¥ng gian xanh c·ªßa GreenWeave
                        </p>
                        
                        <div className="map-container-premium glassmorphism">
                            <div className="map-placeholder-premium">
                                <div className="map-background-gradient"></div>
                                <div className="map-content">
                                    <div className="map-icon-premium">üó∫Ô∏è</div>
                                    <h3>V·ªã tr√≠ showroom</h3>
                                    <p><strong>Khu ƒê√¥ Th·ªã M·ªõi An Ph√∫ Th·ªãnh</strong></p>
                                    <p>Nh∆°n B√¨nh, Quy Nh∆°n</p>
                                    <div className="map-features">
                                        <span className="map-feature">üöó B√£i ƒë·ªó xe mi·ªÖn ph√≠</span>
                                        <span className="map-feature">üå± Kh√¥ng gian xanh</span>
                                        <span className="map-feature">‚òï Caf√© organic</span>
                                    </div>
                                    <button className="map-directions-btn">
                                        <span>Ch·ªâ ƒë∆∞·ªùng</span>
                                        <span>üß≠</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </AnimatedSection>
                </div>
            </section>

            <Footer />
        </div>
    );
};

export default ContactPage; 