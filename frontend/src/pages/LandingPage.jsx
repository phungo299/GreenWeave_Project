import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import Header from '../components/layout/header/Header';
import Footer from '../components/layout/footer/Footer';
import ProductCard from '../components/ui/productcard/ProductCard';
import HeroImage from '../components/ui/HeroImage';
import AnimatedSection from '../components/common/AnimatedSection';

import productService from '../services/productService';
import '../assets/css/LandingPageV2.css';

// Preset animation variants
const smoothZoomIn = {
    hidden: { opacity: 0, scale: 0.92, filter: "blur(2px)" },
    visible: {
        opacity: 1, scale: 1, filter: "blur(0px)",
        transition: { type: "spring", stiffness: 66, damping: 20, mass: 0.9, duration: 1.05 }
    }
};
const fadeIn = {
    hidden: { opacity: 0 },
    visible: { opacity: 1, transition: { duration: 0.8, ease: [0.25, 0.46, 0.45, 0.94] } }
};
const slideUp = {
    hidden: { opacity: 0, y: 40 },
    visible: { opacity: 1, y: 0, transition: { type: "spring", stiffness: 80, damping: 18, duration: 0.9 } }
};

const LandingPage = () => {
    const navigate = useNavigate();
    const [featuredProducts, setFeaturedProducts] = useState([]);
    const [loading, setLoading] = useState(true);
    const [activeFeature, setActiveFeature] = useState(0);
    const [heroVisible, setHeroVisible] = useState(false);

    // Fetch featured products
    useEffect(() => {
        const fetchProducts = async () => {
            try {
                const response = await productService.getFeatured();
                if (response?.success && response?.data) {
                    const formatted = response.data.slice(0, 6).map(product => ({
                        id: product._id,
                        name: product.name || product.title,
                        description: product.description || 'S·∫£n ph·∫©m b·ªÅn v·ªØng',
                        price: `${product.price?.toLocaleString() || 0} ƒë`,
                        image: product.images?.[0] || product.imageUrl,
                        originalPrice: product.price ? `${(product.price * 1.2).toLocaleString()} ƒë` : null
                    }));
                    setFeaturedProducts(formatted);
                }
            } catch (error) {
                console.error('Error fetching products:', error);
            } finally {
                setLoading(false);
            }
        };

        fetchProducts();
    }, []);

    // Auto-rotate features
    useEffect(() => {
        const interval = setInterval(() => {
            setActiveFeature(prev => (prev + 1) % 3);
        }, 4000);
        return () => clearInterval(interval);
    }, []);

    // Hero animation trigger
    useEffect(() => {
        const timer = setTimeout(() => setHeroVisible(true), 100);
        return () => clearTimeout(timer);
    }, []);

    const features = [
        {
            icon: "üå±",
            title: "100% B·ªÅn V·ªØng",
            description: "S·∫£n ph·∫©m t·ª´ v·∫≠t li·ªáu t√°i ch·∫ø v√† th√¢n thi·ªán m√¥i tr∆∞·ªùng"
        },
        {
            icon: "üé®",
            title: "Thi·∫øt K·∫ø ƒê·ªôc ƒê√°o",
            description: "Phong c√°ch hi·ªán ƒë·∫°i, trendy ph√π h·ª£p m·ªçi l·ª©a tu·ªïi"
        },
        {
            icon: "‚ú®",
            title: "Ch·∫•t L∆∞·ª£ng Cao",
            description: "Ki·ªÉm ƒë·ªãnh nghi√™m ng·∫∑t, b·∫£o h√†nh ch√≠nh h√£ng"
        }
    ];

    return (
        <div className="landing-v2">
            <Header />
            
            {/* ULTRA MINIMALIST Hero Section - 2024 Trend */}
            <section className="minimalist-hero" id="home">
                <div className="container">
                    <AnimatedSection variants={fadeIn}>
                    <div className="minimalist-hero__content">
                        <AnimatedSection variants={slideUp}>
                        <h1 className={`minimalist-hero__title ${heroVisible ? 'minimalist-hero__title--visible' : ''}`}>
                            Phong c√°ch.<br />
                            <span className="minimalist-hero__accent">B·ªÅn v·ªØng.</span><br />
                            T∆∞∆°ng lai.
                        </h1>
                        </AnimatedSection>
                        <AnimatedSection variants={fadeIn} delay={0.1}>
                        <p className={`minimalist-hero__description ${heroVisible ? 'minimalist-hero__description--visible' : ''}`}>
                            Th·ªùi trang c√≥ √Ω th·ª©c sinh th√°i<br />cho th·∫ø h·ªá t∆∞∆°ng lai
                        </p>
                        </AnimatedSection>
                        <AnimatedSection variants={smoothZoomIn} delay={0.2}>
                        <div className={`minimalist-hero__actions ${heroVisible ? 'minimalist-hero__actions--visible' : ''}`}>
                            <button 
                                className="minimalist-hero__cta"
                                onClick={() => navigate('/products')}
                            >
                                Kh√°m ph√° ngay
                            </button>
                        </div>
                        </AnimatedSection>
                        <AnimatedSection variants={slideUp} delay={0.3}>
                        <div className={`minimalist-hero__stats ${heroVisible ? 'minimalist-hero__stats--visible' : ''}`}>
                            <div className="stat-simple">
                                <span className="stat-number">5K+</span>
                                <span className="stat-label">Kh√°ch h√†ng</span>
                            </div>
                            <div className="stat-simple">
                                <span className="stat-number">98%</span>
                                <span className="stat-label">H√†i l√≤ng</span>
                            </div>
                            <div className="stat-simple">
                                <span className="stat-number">100%</span>
                                <span className="stat-label">B·ªÅn v·ªØng</span>
                            </div>
                        </div>
                        </AnimatedSection>
                    </div>
                    </AnimatedSection>
                    <AnimatedSection variants={smoothZoomIn} delay={0.2}>
                    <div className={`minimalist-hero__image-section ${heroVisible ? 'minimalist-hero__image-section--visible' : ''}`}>
                        <div className="minimalist-hero__image-wrapper">
                            <HeroImage
                                src="https://images.unsplash.com/photo-1523381210434-271e8be1f52b?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80"
                                alt="B·ªô s∆∞u t·∫≠p th·ªùi trang sinh th√°i"
                                className="minimalist-hero__image"
                                fallbackSrc="https://images.unsplash.com/photo-1556905055-8f358a7a47b2?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80"
                            />
                        </div>
                    </div>
                    </AnimatedSection>
                </div>
            </section>

            {/* Features Section */}
            <section className="features-section" id="features">
                <div className="container">
                    <AnimatedSection variants={fadeIn}>
                    <div className="section-header">
                        <h2 className="section-title">T·∫°i Sao Ch·ªçn GreenWeave?</h2>
                        <p className="section-subtitle">
                            Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m t·ªët nh·∫•t cho b·∫°n v√† h√†nh tinh
                        </p>
                    </div>
                    </AnimatedSection>
                    <div className="features-grid">
                        {features.map((feature, index) => (
                            <AnimatedSection key={index} variants={slideUp} delay={0.1 * index}>
                            <div 
                                className={`feature-card ${activeFeature === index ? 'active' : ''}`}
                                onMouseEnter={() => setActiveFeature(index)}
                            >
                                <div className="feature-icon">{feature.icon}</div>
                                <h3 className="feature-title">{feature.title}</h3>
                                <p className="feature-description">{feature.description}</p>
                            </div>
                            </AnimatedSection>
                        ))}
                    </div>
                </div>
            </section>

            

            {/* Products Section */}
            <section className="products-section" id="products">
                <div className="container">
                    <AnimatedSection variants={fadeIn}>
                    <div className="section-header">
                        <h2 className="section-title">S·∫£n Ph·∫©m N·ªïi B·∫≠t</h2>
                        <p className="section-subtitle">
                            Kh√°m ph√° nh·ªØng m√≥n ƒë·ªì th·ªùi trang ƒë∆∞·ª£c y√™u th√≠ch nh·∫•t
                        </p>
                    </div>
                    </AnimatedSection>
                    
                    {loading ? (
                        <div className="products-loading">
                            <div className="loading-spinner-v2"></div>
                            <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>
                        </div>
                    ) : (
                        <>
                            <div className="products-grid">
                                {featuredProducts.map((product, index) => (
                                    <AnimatedSection key={product.id} variants={smoothZoomIn} delay={0.1 * index}>
                                    <div 
                                        className="product-item"
                                        style={{ animationDelay: `${index * 0.1}s` }}
                                    >
                                        <ProductCard
                                            id={product.id}
                                            name={product.name}
                                            description={product.description}
                                            price={product.price}
                                            image={product.image}
                                            onClick={(id) => navigate(`/products/${id}`)}
                                        />
                                        {product.originalPrice && (
                                            <div className="product-badge">-20%</div>
                                        )}
                                    </div>
                                    </AnimatedSection>
                                ))}
                            </div>
                            <div className="products-actions">
                                <button 
                                    className="btn-outline"
                                    onClick={() => navigate('/products')}
                                >
                                    Xem T·∫•t C·∫£ S·∫£n Ph·∫©m
                                </button>
                            </div>
                        </>
                    )}
                </div>
            </section>

            {/* About Brief Section */}
            <section className="about-brief-section" id="about">
                <div className="container">
                    <div className="about-content">
                        <AnimatedSection variants={slideUp}>
                        <div className="about-text-content">
                            <h2 className="about-title">C√¢u Chuy·ªán GreenWeave</h2>
                            <p className="about-description">
                                Ch√∫ng t√¥i tin r·∫±ng th·ªùi trang kh√¥ng ch·ªâ l√† vi·ªác tr√¥ng ƒë·∫πp, m√† c√≤n l√† vi·ªác 
                                c·∫£m th·∫•y t·ªët v·ªÅ nh·ªØng g√¨ b·∫°n m·∫∑c. M·ªói s·∫£n ph·∫©m c·ªßa GreenWeave ƒë∆∞·ª£c t·∫°o ra 
                                v·ªõi s·ª© m·ªánh b·∫£o v·ªá h√†nh tinh v√† mang l·∫°i gi√° tr·ªã b·ªÅn v·ªØng.
                            </p>
                            <div className="about-highlights">
                                <div className="highlight">
                                    <span className="highlight-icon">‚ôªÔ∏è</span>
                                    <span>V·∫≠t li·ªáu t√°i ch·∫ø 100%</span>
                                </div>
                                <div className="highlight">
                                    <span className="highlight-icon">üåø</span>
                                    <span>Quy tr√¨nh s·∫£n xu·∫•t xanh</span>
                                </div>
                                <div className="highlight">
                                    <span className="highlight-icon">üíö</span>
                                    <span>Th∆∞∆°ng hi·ªáu v√¨ m√¥i tr∆∞·ªùng</span>
                                </div>
                            </div>
                            <button 
                                className="btn-primary"
                                onClick={() => navigate('/about-us')}
                            >
                                T√¨m Hi·ªÉu Th√™m
                            </button>
                        </div>
                        </AnimatedSection>
                        <AnimatedSection variants={smoothZoomIn} delay={0.2}>
                        <div className="about-image">
                            <HeroImage
                                src="https://images.unsplash.com/photo-1445205170230-053b83016050?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80"
                                alt="About GreenWeave"
                                className="about-img"
                                fallbackSrc="https://images.unsplash.com/photo-1556905055-8f358a7a47b2?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80"
                            />
                        </div>
                        </AnimatedSection>
                    </div>
                </div>
            </section>

            {/* CTA Section */}
            <section className="cta-section" id="contact">
                <div className="container">
                    <AnimatedSection variants={fadeIn}>
                    <div className="cta-content">
                        <h2 className="cta-title">S·∫µn S√†ng Cho Phong C√°ch Xanh?</h2>
                        <p className="cta-description">
                            Tham gia c·ªông ƒë·ªìng th·ªùi trang b·ªÅn v·ªØng v√† nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát
                        </p>
                        <div className="cta-actions">
                            <button 
                                className="btn-primary btn-large"
                                onClick={() => navigate('/products')}
                            >
                                Mua S·∫Øm Ngay
                            </button>
                            <div className="cta-features">
                                <span>üöö Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn</span>
                                <span>üîÑ ƒê·ªïi tr·∫£ 30 ng√†y</span>
                                <span>‚≠ê B·∫£o h√†nh ch√≠nh h√£ng</span>
                            </div>
                        </div>
                    </div>
                    </AnimatedSection>
                </div>
            </section>

            <Footer />
        </div>
    );
};

export default LandingPage;